"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
App({
    onLaunch: function () {
      if (!wx.cloud) {
        console.error('请使用 2.2.3 或以上的基础库以使用云能力')
      } else {
        wx.cloud.init({
          env: 'dev-house-0tiax',
          traceUser: true,
        })
      }
    },

  //检测是否登录函数
  // 为登录则提示登录
  IsLogon() {
    // 获取缓存的登录信息
    var userInfo = wx.getStorageSync('userInfo')
    console.log('app.js', '21312' + userInfo)
    if (userInfo.name && userInfo.phone) {
      this.globalData.UserLogin = true
      this.globalData.userInfo = userInfo
    } else {
      this.globalData.UserLogin = false
    }
  },

    onHide: function () {
        console.log("Quit MicroPrg");
    },
    globalData: {
        authData: [],
        restAdd: 'https://i2.hanbell.com.cn',
        weChatCallBack: 'https%3a%2f%2fi2.hanbell.com.cn%2fHanbell-WCO%2fAuthCallBackServlet',
        restId: '1505912014724',
        employeeId: '',
       employeeIName: '',
        mainLoadingHidden:false,
        restToken: '0ec858293fccfad55575e26b0ce31177',
        restAuth: 'appid=1505912014724&token=0ec858293fccfad55575e26b0ce31177'
    },
});
//# sourceMappingURL=data:application/json;base64,